import 'package:fb_copy/models/auth_model.dart';
import 'package:fb_copy/models/post_model.dart';
import 'package:flutter/material.dart';
import 'package:logger/logger.dart';
import 'package:shared_preferences/shared_preferences.dart';

const host = '169.254.109.23';
const baseUrl = "http://$host:5000/it4788";
const authUrl = '$baseUrl/auth';
const friendUrl = '$baseUrl/friend';
const postUrl = '$baseUrl/post';
const userUrl = '$baseUrl/user';
const searchUrl = '$baseUrl/search';
const commentUrl = '$baseUrl/comment';
const likeUrl = '$baseUrl/like';
const settingUrl = '$baseUrl/setting';
const chatUrl = '$baseUrl/chat';

AuthModel? authUser;
String token = '';
List<PostModel> listPost = [];

Future<void> checkToken() async {
  if (token == '') {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    token = prefs.getString('token') ?? '';
    // create excpetion {code: 9998, message: 'Phi√™n ƒëƒÉng nh·∫≠p b·∫°n ƒë√£ h·∫øt h·∫°n vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i', details: 'Token is invalid'}
    if (token == '') {
      Logger().d('Token is invalid');
      throw Exception('Phi√™n ƒëƒÉng nh·∫≠p b·∫°n ƒë√£ h·∫øt h·∫°n vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i');
    }
  }
}

class AppColor {
  static const Color primaryColor = Color(0xFF1876F2);
  static const Color greenColor = Color(0xFF42b72a);
  static const Color grayColor = Color(0xFF8D8D8D);
  static const Color secondaryColor = Color(0xFFE9EBEE);
  static const Color kPrimaryColor = Color(0xFF1979FF);
  static const Color kPrimaryLightColor = Color(0xFFE3F2FD);
  static const Color kPrimaryColorText = Color(0xFF1979FF);
  static const Color backgroundColor = Color(0xFFFFFFFF);
  static const Color textColor = Color(0xFFFFFFFF);
  static const Color kColorTextNormal = Color(0xFF000000);
  static const Color kBlack = Color(0xFF000000);
  static const Color kColorButton = Color(0xFF757575);
  static const Color kBackgroundGrey = Color(0xFFe4e6eb);
  static const Color kGreenComment = Color(0xff00c853);
  static const Color kDanger = Color(0xffc62828);
}

// ------ Error ------
const serviceError = 'Service Error';
const unauthorizedError = 'Unauthorized';
const somethingWentWrongError = 'Something went wrong';

const errorCode = {
  '9992': 'B√†i vi·∫øt kh√¥ng t·ªìn t·∫°i',
  '9993': 'M√£ x√°c th·ª±c kh√¥ng ƒë√∫ng',
  '9994': 'Kh√¥ng c√≥ d·ªØ li·ªáu ho·∫∑c kh√¥ng c√≤n d·ªØ li·ªáu',
  '9995': 'Kh√¥ng c√≥ ng∆∞·ªùi d√πng na·ª≥',
  '9996': 'Ng∆∞·ªùi d√πng ƒë√£ t·ªìn t·∫°i',
  '9997': 'Ph∆∞∆°ng th·ª©c kh√¥ng h·ª£p l·ªá',
  '9998': 'Sai Token',
  '9999': 'L·ªói exception',
  '1001': 'L·ªói m·∫•t k·∫øt n·ªëi DB ho·∫∑c l·ªói query',
  '1002': 'S·ªë l∆∞·ª£ng tham s·ªë kh√¥ng ƒë·ªß',
  '1003': 'Ki·ªÉu tham s·ªë kh√¥ng h·ª£p l·ªá',
  '1004': 'Gi√° tr·ªã tham s·ªë kh√¥ng h·ª£p l·ªá',
  '1005': 'Unknow error',
  '1006': 'C·ª° file v∆∞·ª£t m·ª©c cho ph√©p',
  '1007': 'Upload file th·∫•t b·∫°i',
  '1008': 'S·ªë lu·ª£ng image v∆∞·ª£t m·ª©c cho ph√©p',
  '1009': 'Kh√¥ng c√≥ quy·ªÅn truy c·∫≠p',
  '1010': 'H√†nh ƒë·ªông ƒë√£ ƒë∆∞·ª£c ng∆∞·ªùi d√πng th·ª±c hi·ªán tr∆∞·ªõc ƒë√≥',
  '1011': 'B√†i ƒëƒÉng vi ph·∫°m ti√™u chu·∫©n c·ªông ƒë·ªìng',
  '1012': 'B√†i ƒëƒÉng b·ªã gi·ªõi h·∫°n m·ªôt s·ªë qu·ªëc gia',
};
const postStatusArray = [
  'h·∫°nh ph√∫c',
  'c√≥ ph√∫c',
  'ƒë∆∞·ª£c y√™u',
  'bu·ªìn',
  'ƒë√°ng y√™u',
  'bi·∫øt ∆°n',
  'h√†o h·ª©ng',
  'ƒëang y√™u',
  'ƒëi√™n',
  'c·∫£m k√≠ch',
  'sung s∆∞·ªõng',
  'tuy·ªát v·ªùi',
  'ng·ªëc ngh·∫øch',
  'vui v·∫ª',
  'tuy·ªát v·ªùi',
  'th·∫≠t phong c√°ch',
  'th√∫ v·ªã',
  'th∆∞ gi√£n',
  'positive',
  'r√πng m√¨nh',
  'ƒë·∫ßy hi v·ªçng',
  'h√¢n hoan',
  'm·ªát m·ªèi',
  'c√≥ ƒë·ªông l·ª±c',
  'proud',
  'ch·ªâ c√≥ m·ªôt m√¨nh',
  'chu ƒë√°o',
  'OK',
  'nh·ªõ nh√†',
  'gi·∫≠n d·ªØ',
  '·ªëm y·∫øu',
  'h√†i l√≤ng',
  'ki·ªát s·ª©c',
  'x√∫c ƒë·ªông',
  't·ª± tin',
  'r·∫•t tuy·ªát',
  't∆∞∆°i m·ªõi',
  'quy·∫øt ƒëo√°n',
  'ki·ªát s·ª©c',
  'b·ª±c m√¨nh',
  'vui v·∫ª',
  'g·∫∑p may',
  'ƒëau kh·ªï',
  'bu·ªìn t·∫ª',
  'bu·ªìn ng·ªß',
  'tr√†n ƒë·∫ßy sinh l·ª±c',
  'ƒë√≥i',
  'chuy√™n nghi·ªáp',
  'ƒëau ƒë·ªõn',
  'thanh th·∫£n',
  'th·∫•t v·ªçng',
  'l·∫°c quan',
  'l·∫°nh',
  'd·ªÖ th∆∞∆°ng',
  'tuy·ªát c√∫ m√®o',
  'th·∫≠t tuy·ªát',
  'h·ªëi ti·∫øc',
  'th·∫≠t gi·ªèi',
  'lo l·∫Øng',
  'vui nh·ªôn',
  't·ªìi t·ªá',
  'xu·ªëng tinh th·∫ßn',
  'ƒë·∫ßy c·∫£m h·ª©ng',
  'h√†i l√≤ng',
  'ph·∫•n kh√≠ch',
  'b√¨nh tƒ©nh',
  'b·ªëi r·ªëi',
  'goofy',
  'tr·ªëng v·∫Øng',
  't·ªët',
  'm·ªâa mai',
  'c√¥ ƒë∆°n',
  'm·∫°nh m·∫Ω',
  'lo l·∫Øng',
  'ƒë·∫∑c bi·ªát',
  'ch√°n n·∫£n',
  'vui v·∫ª',
  't√≤ m√≤',
  '·ªß d·ªôt',
  'ƒë∆∞·ª£c ch√†o ƒë√≥n',
  'g·ª•c ng√£',
  'xinh ƒë·∫πp',
  'tuy·ªát v·ªùi',
  'c√°u',
  'cƒÉng th·∫≥ng',
  'thi·∫øu',
  'k√≠ch ƒë·ªông',
  'tinh qu√°i',
  'kinh ng·∫°c',
  't·ª©c gi·∫≠n',
  'bu·ªìn ch√°n',
  'b·ªëi r·ªìi',
  'm·∫°nh m·∫Ω',
  'ph·∫´n n·ªô',
  'm·ªõi m·∫ª',
  'th√†nh c√¥ng',
  'ng·∫°c nhi√™n',
  'b·ªëi r·ªëi',
  'n·∫£n l√≤ng',
  't·∫ª nh·∫°t',
  'xinh x·∫Øn',
  'kh√° h∆°n',
  't·ªôi l·ªói',
  'an to√†n',
  't·ª± do',
  'hoang mang',
  'gi√† nua',
  'l∆∞·ªùi bi·∫øng',
  't·ªìi t·ªá h∆°n',
  'kh·ªßng khi·∫øp',
  'tho·∫£i m√°i',
  'ng·ªõ ng·∫©n',
  'h·ªï th·∫πn',
  'kinh kh·ªßng',
  'ƒëang ng·ªß',
  'kh·ªèe',
  'nhanh nh·∫πn',
  'ng·∫°i ng√πng',
  'gay go',
  'k·ª≥ l·∫°',
  'nh∆∞ con ng∆∞·ªùi',
  'b·ªã t·ªïn th∆∞∆°ng',
  'kh·ªßng khi·∫øp'
];

const reportSubjectArray = {
  '·∫¢nh kh·ªèa th√¢n': [
    '·∫¢nh kh·ªèa th√¢n ng∆∞·ªùi l·ªõn',
    'G·ª£i d·ª•c',
    'Ho·∫°t ƒë·ªông t√¨nh d·ª•c',
    'B√≥c l·ªôt t√¨nh d·ª•c',
    'D·ªãch v·ª• t√¨nh d·ª•c',
    'Li√™n quan ƒë·∫øn tr·∫ª em',
    'Chia s·∫ª h√¨nh ·∫£nh ri√™ng t∆∞'
  ],
  'B·∫°o l·ª±c': [
    'H√¨nh ·∫£nh b·∫°o l·ª±c',
    'T·ª≠ vong ho·∫∑c b·ªã th∆∞∆°ng n·∫∑ng',
    'M·ªëi ƒëe d·ªça b·∫°o l·ª±c',
    'Ng∆∞·ª£c ƒë√£i ƒë·ªông v·∫≠t',
    'V·∫•n ƒë·ªÅ kh√°c'
  ],
  'Qu·∫•y r·ªìi': ['T√¥i', 'M·ªôt ng∆∞·ªùi b·∫°n'],
  'T·ª± t·ª≠/T·ª± g√¢y th∆∞∆°ng t√≠ch': 'T·ª± t·ª≠/T·ª± g√¢y th∆∞∆°ng t√≠ch',
  'Tin gi·∫£': 'Tin gi·∫£',
  'Spam': 'Spam',
  'B√°n h√†ng tr√°i ph√©p': [
    'Ch·∫•t c·∫•m, ch·∫•t g√¢y nghi·ªán',
    'V≈© kh√≠',
    'ƒê·ªông v·∫≠t c√≥ nguy c∆° b·ªã tuy·ªát ch·ªßng',
    'ƒê·ªông v·∫≠t kh√°c',
    'V·∫•n ƒë·ªÅ kh√°c'
  ],
  'Ng√¥n t·ª´ g√¢y th√π gh√©t': [
    'Ch·ªßng t·ªôc ho·∫∑c s·∫Øc t·ªôc',
    'Ngu·ªìn g·ªëc qu·ªëc gia',
    'Th√†nh ph·∫ßn t√¥n gi√°o',
    'Ph√¢n chia giai c·∫•p x√£ h·ªôi',
    'Thi√™n h∆∞·ªõng t√¨nh d·ª•c',
    'Gi·ªõi t√≠nh ho·∫∑c b·∫£n d·∫°ng gi·ªõi',
    'T√¨nh tr·∫°ng khuy·∫øt t·∫≠t ho·∫∑c b·ªánh t·∫≠t',
    'H·∫°ng m·ª•c kh√°c'
  ],
  'Kh·ªßng b·ªë': 'Kh·ªßng b·ªë'
};
final linkPattern = RegExp(r"(https?|ftp|file)://[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]");
final Map<String, String> emojiMap = {
  ":)": "üòä",
  ":(": "üòû",
  ":|": "üòê",
  ":D": "üòÄ",
  ":P": "üòõ",
  ":*": "üòò",
  ":O": "üòÆ",
  ":@": "üò°",
  ":S": "üòï",
  ":&": "üò∑",
  ":\\": "üòí",
  ":^)": "üòè",
  ":3": "üòù",
  ":v": "üòâ",
  ":x": "üò∂",
  ":?": "üòï",
  ":!": "üò±",
  // ":(": "üòî",
  // ":)": "üòÉ",
  ":>": "üòé",
  ":<": "üòí",
  ":/": "üòï",
  ":;": "üòâ",
  ":=": "üòê",
  ":~": "üòê",
  ":`": "üòê",
  ":_": "üòê",
  ":`(": "üò¢",
  ":`)": "üòÇ",
  ":`D": "üòÇ",
  ":`*": "üòò",
  ":`v": "üòò",
  ":`3": "üòò",
  "(T_T)": "üò≠",
  "(^_^)": "üòä",
  "^_^": "üòä",
  // add more emojis here
};
